.icon-fb {
  width: 32px;
  height: 32px;
}

.icon-ig {
  width: 32px;
  height: 32px;
}

.icon-tw {
  width: 32px;
  height: 32px;
}

.icon-vk {
  width: 32px;
  height: 32px;
}

/* normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */

html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

article,
aside,
footer,
header,
nav,
section {
  display: block;
}

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

figcaption,
figure,
main {
  /* 1 */
  display: block;
}

figure {
  margin: 1em 40px;
}

hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

b,
strong {
  font-weight: inherit;
}

b,
strong {
  font-weight: bolder;
}

code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

dfn {
  font-style: italic;
}

mark {
  background-color: #ff0;
  color: #000;
}

small {
  font-size: 80%;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

audio,
video {
  display: inline-block;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

img {
  border-style: none;
}

svg:not(:root) {
  overflow: hidden;
}

button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

button,
input {
  /* 1 */
  overflow: visible;
}

button,
select {
  /* 1 */
  text-transform: none;
}

button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

textarea {
  overflow: auto;
}

[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

details,
menu {
  display: block;
}

summary {
  display: list-item;
}

canvas {
  display: inline-block;
}

template {
  display: none;
}

[hidden] {
  display: none;
}

* {
  margin: 0;
  padding: 0;
  font: inherit;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

html {
  font-size: 10px;
}

body {
  position: relative;
  background-image: url("../assets/img/general/main-bg-3.jpg");
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: cover;
  background-position: center center;
  font-family: 'Istok Web', sans-serif;
  font-size: 1.6rem;
  line-height: 1.2;
  color: #fff;
}

a {
  color: #fff;
  text-decoration: underline;
}

a:hover {
  text-decoration: none;
  color: #008000;
}

a:active {
  text-decoration: underline;
}

a:visited {
  color: #fff;
  text-decoration: underline;
}

h1 {
  font-size: 5rem;
  line-height: 1.1;
}

.content {
  padding: 10% 0;
}

.content__wrap {
  max-width: 1280px;
  margin: 0 auto;
  padding: 0 5%;
}

.catalog-list {
  list-style-type: none;
}

.catalog-list__item {
  margin-bottom: 7%;
  padding: 5%;
  background: rgba(0,0,0,0.5);
}

.catalog-list__title {
  display: inline-block;
  font-size: 3rem;
  margin-bottom: 4%;
}

.catalog-list__text {
  margin-bottom: 4%;
}

.catalog-list__link {
  margin-right: 5%;
}

.gallery {
  list-style-type: none;
  padding: 5%;
  background: rgba(0,0,0,0.5);
}

.layouts-list {
  list-style-type: none;
  padding: 5%;
  background: rgba(0,0,0,0.5);
}

.demo-png-icon-red {
  background-image: url("../assets/img/sprites/demo.png");
  background-position: 0px 0px;
  width: 50px;
  height: 50px;
  display: inline-block;
}

.demo-png-icons-green {
  background-image: url("../assets/img/sprites/demo.png");
  background-position: 0px -58px;
  width: 50px;
  height: 50px;
  display: inline-block;
}

.demo-png-icons-blue {
  background-image: url("../assets/img/sprites/demo.png");
  background-position: 0px -116px;
  width: 50px;
  height: 50px;
  display: inline-block;
}

.svg-icon {
  fill: currentColor;
}

@media only screen and (min-width: 560px) {
  body {
    font-size: 2rem;
  }
}

@media only screen and (min-width: 700px) {
  .catalog-list__title {
    margin-bottom: 2%;
  }

  .catalog-list__text {
    margin-bottom: 2%;
  }
}

@media only screen and (min-width: 800px) {
  .catalog-list__item {
    margin-bottom: 5%;
  }
}

@media only screen and (min-width: 850px) {
  .catalog-list__link {
    margin-right: 3%;
  }
}

@media only screen and (min-width: 900px) {
  .catalog-list__item {
    margin-bottom: 4%;
  }
}

@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  .demo-png-icon-red {
    background-image: url("../assets/img/sprites/demo@2x.png");
    background-size: 50px 166px;
  }

  .demo-png-icons-green {
    background-image: url("../assets/img/sprites/demo@2x.png");
    background-size: 50px 166px;
  }

  .demo-png-icons-blue {
    background-image: url("../assets/img/sprites/demo@2x.png");
    background-size: 50px 166px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
